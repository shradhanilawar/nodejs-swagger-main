openapi: 3.0.3
info:
  title: Swagger Users - OpenAPI 3.0
  version: 1.0.11
servers:
  - url: http://localhost:3000
paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Get all user details
      description: Get user details
      operationId: getallUser
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
    post:
      tags:
        - Users
      summary: Create new User
      description: Create new user details
      operationId: CreateUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User Created successfully...
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
  /api/users/{id}:
    get:
      tags:
        - Users
      summary: Get an existing user details by ID
      description: Get user details
      operationId: getUsersById
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
    put:
      tags:
        - Users
      summary: Update an existing user by ID
      description: Update existing user details by ID
      operationId: updateUsersById
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
    delete:
      tags:
        - Users
      summary: Delete an existing user by ID
      description: Delete existing user details by ID
      operationId: deleteUsersById
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: username
